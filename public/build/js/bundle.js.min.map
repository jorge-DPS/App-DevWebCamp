{"version":3,"sources":["hora.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","console","log","listadoHorasArray","Array","from","dataset","horaId","filter","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInputBuscar","ponentes","PonentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevioSeleccionado","ponenteId","respuesta","arrayPonentes","id","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\n    const horas = document.querySelector('#horas');\n\n    if (horas) {\n        let busqueda = {\n            categoria_id: '',\n            dia: '',\n        };\n\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n\n        dias.forEach((dia) => dia.addEventListener('change', terminoBusqueda));\n\n        function terminoBusqueda(e) {\n            // console.log(e.target); // -> aqui el .vlaue trae su valor del ojeto clickeados\n            // busqueda.dia = e.target.value; // -> es lo mismo\n            busqueda[e.target.name] = e.target.value;\n\n            // Reiniciar los campos ocultos y el selectpr de horas\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            if (Object.values(busqueda).includes('')) {\n                // console.log('el objeto: ', busqueda, ' aun tiene algun campo vacio');\n                return;\n            }\n\n            // busqueda['categoria_id'] = 'jorge_cat'\n            // busqueda['dia'] = 'jorge_dia'\n            // console.log(busqueda, 'aqui el obj busqueda');\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            // console.log(busqueda, 'ya lleno todo el objeto de busqueda');\n            const { dia, categoria_id } = busqueda;\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n\n            // respuesta del lado del servidor\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n            // console.log(eventos);\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            // Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li'); //convertir a array un NodeArray\n            listadoHoras.forEach((li) => li.classList.add('horas__hora--deshabilitada'));\n\n            // Comprobar eventos ya tomados y quitar la variable de deshabilitado\n            const horasTomadas = eventos.map((evento) => evento.hora_id); // -> retorna solo la hora_id en un arreglo\n            console.log(horasTomadas, 'aqui las horas tomadas');\n            const listadoHorasArray = Array.from(listadoHoras); //-> lo convierte a NodeList\n            console.log(listadoHorasArray.forEach(function (li) {\n                console.log(li.dataset.horaId);\n            }));\n\n            const resultado = listadoHorasArray.filter(function (li) {\n                return !horasTomadas.includes(li.dataset.horaId);\n            }); // -> retorna todos los que son distintos a las horasTomadas\n            // console.log(resultado);\n            resultado.forEach((li) => li.classList.remove('horas__hora--deshabilitada'));\n\n            // agragamos el evento listener solo a los componentes que no tengan la calse .horas__hora--deshabilitada\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach((hora) => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n            // quitar la seleccion previa, si existe un nuevo click para seleccionar\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n            // Agregar clase  de seleccioando\n            e.target.classList.add('horas__hora--seleccionada');\n            inputHiddenHora.value = e.target.dataset.horaId;\n\n            // Llenar el campo oculta de Dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\n        }\n    }\n})();\n","(function () {\n    const ponentesInputBuscar = document.querySelector('#ponentes');\n\n    if (ponentesInputBuscar) {\n        let ponentes = []\n        let PonentesFiltrados = []\n\n        const listadoPonentes = document.querySelector('#listado-ponentes')\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\n\n        obtenerPonentes();\n        ponentesInputBuscar.addEventListener('input', buscarPonentes)\n\n        async function obtenerPonentes() {\n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n\n            // console.log(resultado, 'aqui los ponentes');\n\n            formatearPonentes(resultado) //-> aqui solo traemos los ponentes su ombre y apellido\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map(ponente => { //-> aqui el map retorna un una nueva lista\n                return {\n                    id: ponente.id,\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido}`,\n                }\n            })\n\n            // console.log(ponentes, 'aqui lo formateado');\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value\n\n            if (busqueda.length > 3) {\n                const expresion = new RegExp(busqueda, 'i');\n                PonentesFiltrados = ponentes.filter(ponente => {\n                    if (ponente.nombre.toLowerCase().search(expresion) != -1) {\n                        return ponente\n                    }\n                })\n\n                // console.log(PonentesFiltrados);\n            } else {\n                PonentesFiltrados = []\n            }\n\n            mostrarPonentes()\n        }\n\n        function mostrarPonentes() {\n\n            // Limpia la lista (UL) -> es mejor haerlo asi\n            while (listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\n            }\n\n            // verificcar si existe el elemento buscado; y si no, entonces mostrar un texto que diga que no hay resultados\n            if (PonentesFiltrados.length > 0) {\n                PonentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\n                    ponenteHTML.textContent = ponente.nombre\n                    ponenteHTML.dataset.ponenteId = ponente.id\n                    ponenteHTML.onclick = seleccionarPonente;\n\n                    // Añadir al DOM\n                    listadoPonentes.appendChild(ponenteHTML)\n                });\n            } else {\n                const noResultados = document.createElement('P')\n                noResultados.classList.add('listado-ponentes__no-resultado')\n                noResultados.textContent = 'No hay resultados para tu búsqueda'\n                listadoPonentes.appendChild(noResultados)\n            }\n\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target; // -> en ponente, guarda todo el elemento li\n            console.log(ponente);\n\n            // Remover la clase previa\n            const ponentePrevioSeleccionado = document.querySelector('.listado-ponentes__ponente--seleccionado')\n\n            if (ponentePrevioSeleccionado) {\n                ponentePrevioSeleccionado.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\n\n            ponenteHidden.value = ponente.dataset.ponenteId\n            console.log(ponenteHidden);\n\n        }\n    }\n})();","(function () {\n    const tagsInput = document.querySelector('#tags_input');\n    if (tagsInput) {\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n\n        // recuperar del input oculto los tags\n        if (tagsInputHidden.value !== '') {\n            // convertir un striong delimitado por comas a un array\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        // escuchar los cambios en el input\n        tagsInput.addEventListener('keypress', guardarTag);\n\n        function guardarTag(e) {\n            if (e.keyCode === 44) {\n                if (e.target.value.trim() === '' || e.target.value < 1) {\n                    return;\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n\n                //limpiar el input\n                tagsInput.value = '';\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach((tag) => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag');\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag;\n                tagsDiv.appendChild(etiqueta);\n            });\n\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n            tags = tags.filter((tag) => tag !== e.target.textContent);\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})();\n"]}